use utf8;
use v5.22;
use lib qw(lib);

use Perly::Bot;
use Perly::Bot::Media::Twitter;
use Perly::Bot::Post;
use Time::Piece;
use Net::Twitter::Lite::WithAPIv1_1;

use Data::Dumper;

my $bare = defined $ARGV[0];

if( $bare ) {
	my %params = (
		consumer_key        => $ENV{PERLYBOT_TWITTER_CONSUMER_KEY},
		consumer_secret     => $ENV{PERLYBOT_TWITTER_CONSUMER_SECRET},
		access_token        => $ENV{PERLYBOT_TWITTER_ACCESS_TOKEN},
		access_token_secret => $ENV{PERLYBOT_TWITTER_ACCESS_SECRET},
		ssl                 => 1,
		);

say "Params: " , Dumper( \%params );

	my $twitter = Net::Twitter::Lite::WithAPIv1_1->new( %params );

	die "No twitter" unless ref $twitter;

	my $status = $twitter->update( "This is a test " . rand( 137 ) );
	}
else {
	my $config_file = 't/test_config.yml';
	my $config = Perly::Bot::Config->new( $config_file );

	my $logger = Log::Log4perl->get_logger();
	$logger->level( 'DEBUG' );

	my $twitter = $config->media->{'Perly::Bot::Media::Twitter'}{'object'};

	my $post = Perly::Bot::Post->new( {
			delay_seconds => 0,
			description   => "This is something about Perl",
			datetime      => Time::Piece->strptime( "2016-01-01", "%Y-%m-%d" ),
			title         => "$$: The Perl Link",
			url           => 'http://www.perl.com/',
		  } );

	my $tweet = $twitter->_build_tweet( $post );
	$logger->debug( "Tweet is [$tweet]" );

	my $tw = $twitter->{twitter_api};

#$tw->update(  "$$: 137: $tweet" );

	$twitter->send( $post );
	}
